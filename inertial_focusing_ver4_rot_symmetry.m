function out = model
%
% inertial_focusing_ver4_rot_symmetry.m
%
% Model exported on Nov 16 2023, 15:03 by COMSOL 6.1.0.357.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/Users/au208229/Documents/Research/Nanoparticles in Blood Stream @ Thomas Vorup-Jensen');

model.label('inertial_focusing_ver4_rot_symmetry.mph');

model.param.set('dp', '0.775[um]', 'Particle diameter');
model.param.set('muf', '1.2[cP]', 'Fluid dynamic viscosity');
model.param.set('Vav', '3.2[mm/s]', 'Average channel velocity');
model.param.set('d', '8[um]', 'Channel width');
model.param.set('L', '9[mm]', 'Channel length');
model.param.set('rhof', '0.994[g/cm^3]', 'Fluid density');
model.param.set('rhop', '2*rhof', 'Particle density');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 2);
model.component('comp1').geom('geom1').axisymmetric(true);

model.component('comp1').mesh.create('mesh1');

model.component('comp1').geom('geom1').lengthUnit([native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm']);
model.component('comp1').geom('geom1').create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('r1').set('size', {'d/2' 'L'});
model.component('comp1').geom('geom1').run;

model.component('comp1').variable.create('var1');
model.component('comp1').variable('var1').set('dn', 'abs(qr/d-0.5)', 'Normalized distance from center');
model.component('comp1').variable('var1').set('dnave', 'fpt.ave(dn)', 'Normalized distance, average');
model.component('comp1').variable('var1').set('dnstd', 'sqrt(fpt.ave(dn^2)-fpt.ave(dn)^2)', 'Normalized distance, standard deviation');

model.view.create('view2', 3);
model.view.create('view3', 3);

model.component('comp1').physics.create('spf', 'LaminarFlow', 'geom1');
model.component('comp1').physics('spf').create('inl1', 'InletBoundary', 1);
model.component('comp1').physics('spf').feature('inl1').selection.set([2]);
model.component('comp1').physics('spf').create('out1', 'OutletBoundary', 1);
model.component('comp1').physics('spf').feature('out1').selection.set([3]);
model.component('comp1').physics.create('fpt', 'FluidParticleTracing', 'geom1');
model.component('comp1').physics('fpt').create('inl1', 'Inlet', 1);
model.component('comp1').physics('fpt').feature('inl1').selection.set([2]);
model.component('comp1').physics('fpt').create('out1', 'Outlet', 1);
model.component('comp1').physics('fpt').feature('out1').selection.set([3]);
model.component('comp1').physics('fpt').create('lf1', 'LiftForce', 2);
model.component('comp1').physics('fpt').feature('lf1').selection.set([1]);
model.component('comp1').physics('fpt').feature('lf1').selection('ParallelBoundary1').set([4]);
model.component('comp1').physics('fpt').feature('lf1').selection('ParallelBoundary2').set([1]);
model.component('comp1').physics('fpt').create('df1', 'DragForce', 2);
model.component('comp1').physics('fpt').feature('df1').selection.set([1]);

model.component('comp1').mesh('mesh1').create('map1', 'Map');
model.component('comp1').mesh('mesh1').feature('map1').create('dis1', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').create('dis2', 'Distribution');
model.component('comp1').mesh('mesh1').feature('map1').feature('dis1').selection.set([2 3]);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis2').selection.set([1 4]);

model.component('comp1').view('view1').axis.set('xmin', -0.049999963492155075);
model.component('comp1').view('view1').axis.set('xmax', 2.049999952316284);
model.component('comp1').view('view1').axis.set('ymin', -1968.4765625);
model.component('comp1').view('view1').axis.set('ymax', 10968.4765625);
model.component('comp1').view('view1').axis.set('viewscaletype', 'automatic');

model.component('comp1').physics('spf').feature('fp1').set('rho_mat', 'userdef');
model.component('comp1').physics('spf').feature('fp1').set('rho', 'rhof');
model.component('comp1').physics('spf').feature('fp1').set('mu_mat', 'userdef');
model.component('comp1').physics('spf').feature('fp1').set('mu', 'muf');
model.component('comp1').physics('spf').feature('wallbc1').set('UseViscousSlip', true);
model.component('comp1').physics('spf').feature('inl1').set('BoundaryCondition', 'FullyDevelopedFlow');
model.component('comp1').physics('spf').feature('inl1').set('Uavfdf', 'Vav');
model.component('comp1').physics('fpt').feature('axi1').set('WallCondition', 'Pass');
model.component('comp1').physics('fpt').feature('pp1').set('dp', 'dp');
model.component('comp1').physics('fpt').feature('pp1').set('rhop_mat', 'userdef');
model.component('comp1').physics('fpt').feature('pp1').set('rhop', 'rhop');
model.component('comp1').physics('fpt').feature('inl1').set('InitialPosition', 'Density');
model.component('comp1').physics('fpt').feature('inl1').set('N', 50);
model.component('comp1').physics('fpt').feature('inl1').set('u_src', 'root.comp1.u');
model.component('comp1').physics('fpt').feature('out1').set('WallCondition', 'Disappear');
model.component('comp1').physics('fpt').feature('lf1').set('LiftLaw', 'WallInduced');
model.component('comp1').physics('fpt').feature('lf1').set('mu_mat', 'root.comp1.spf.mu');
model.component('comp1').physics('fpt').feature('lf1').set('u_src', 'root.comp1.u');
model.component('comp1').physics('fpt').feature('df1').set('DragLaw', 'HaiderLevenspiel');
model.component('comp1').physics('fpt').feature('df1').set('u_src', 'root.comp1.u');
model.component('comp1').physics('fpt').feature('df1').set('mu_mat', 'root.comp1.spf.mu');
model.component('comp1').physics('fpt').feature('df1').set('rho_mat', 'root.comp1.spf.rho');

model.component('comp1').mesh('mesh1').feature('map1').feature('dis1').set('type', 'predefined');
model.component('comp1').mesh('mesh1').feature('map1').feature('dis1').set('elemcount', 10);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis1').set('elemratio', 5);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis1').set('symmetric', true);
model.component('comp1').mesh('mesh1').feature('map1').feature('dis2').set('numelem', 500);
model.component('comp1').mesh('mesh1').run;

model.study.create('std1');
model.study('std1').create('param', 'Parametric');
model.study('std1').create('stat', 'Stationary');
model.study('std1').create('time', 'Transient');
model.study('std1').feature('time').set('activate', {'spf' 'off' 'fpt' 'on' 'frame:spatial1' 'on' 'frame:material1' 'on'});

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').create('su1', 'StoreSolution');
model.sol('sol1').create('st2', 'StudyStep');
model.sol('sol1').create('v2', 'Variables');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').create('sc1', 'SCGS');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').create('ja1', 'Jacobi');
model.sol('sol1').feature('t1').feature.remove('fcDef');
model.sol.create('sol3');
model.sol('sol3').study('std1');
model.sol('sol3').label('Parametric Solutions 1');

model.batch.create('p1', 'Parametric');
model.batch('p1').create('so1', 'Solutionseq');
model.batch('p1').study('std1');

model.result.dataset.create('rev1', 'Revolve2D');
model.result.dataset.create('part1', 'Particle');
model.result.dataset.create('rev2', 'Revolve2D');
model.result.dataset.create('part2', 'Particle');
model.result.dataset('rev2').set('data', 'dset3');
model.result.dataset('part2').set('solution', 'sol3');
model.result.create('pg1', 'PlotGroup2D');
model.result.create('pg2', 'PlotGroup2D');
model.result.create('pg3', 'PlotGroup3D');
model.result.create('pg4', 'PlotGroup2D');
model.result.create('pg5', 'PlotGroup2D');
model.result.create('pg6', 'PlotGroup2D');
model.result.create('pg7', 'PlotGroup3D');
model.result.create('pg9', 'PlotGroup1D');
model.result.create('pg10', 'PlotGroup2D');
model.result.create('pg11', 'PlotGroup2D');
model.result.create('pg8', 'PlotGroup2D');
model.result('pg1').create('surf1', 'Surface');
model.result('pg2').create('con1', 'Contour');
model.result('pg2').feature('con1').set('expr', 'p');
model.result('pg3').create('surf1', 'Surface');
model.result('pg4').set('data', 'part1');
model.result('pg4').create('traj1', 'ParticleTrajectories');
model.result('pg4').feature('traj1').create('col1', 'Color');
model.result('pg4').feature('traj1').feature('col1').set('expr', 'fpt.vr');
model.result('pg5').set('data', 'dset3');
model.result('pg5').create('surf1', 'Surface');
model.result('pg5').create('arws1', 'ArrowSurface');
model.result('pg6').set('data', 'dset3');
model.result('pg6').create('con1', 'Contour');
model.result('pg6').feature('con1').set('expr', 'p');
model.result('pg7').create('surf1', 'Surface');
model.result('pg9').set('data', 'part2');
model.result('pg9').create('glob1', 'Global');
model.result('pg9').create('glob2', 'Global');
model.result('pg9').feature('glob1').set('data', 'part2');
model.result('pg9').feature('glob2').set('data', 'part2');
model.result('pg10').set('data', 'part2');
model.result('pg10').create('traj1', 'ParticleTrajectories');
model.result('pg10').feature('traj1').create('col1', 'Color');
model.result('pg10').feature('traj1').feature('col1').set('expr', 'fpt.vr');
model.result('pg11').set('data', 'part2');
model.result('pg11').create('traj1', 'ParticleTrajectories');
model.result('pg11').feature('traj1').create('col1', 'Color');
model.result('pg11').feature('traj1').feature('col1').set('expr', 'fpt.vr');
model.result('pg8').set('data', 'part2');
model.result('pg8').create('traj1', 'ParticleTrajectories');
model.result('pg8').create('traj3', 'ParticleTrajectories');
model.result('pg8').create('traj2', 'ParticleTrajectories');
model.result('pg8').create('traj4', 'ParticleTrajectories');
model.result('pg8').create('traj5', 'ParticleTrajectories');
model.result('pg8').create('traj6', 'ParticleTrajectories');
model.result('pg8').create('traj7', 'ParticleTrajectories');
model.result('pg8').feature('traj1').set('data', 'part2');
model.result('pg8').feature('traj1').create('col1', 'Color');
model.result('pg8').feature('traj1').feature('col1').set('expr', 'fpt.vr');
model.result('pg8').feature('traj3').set('data', 'part2');
model.result('pg8').feature('traj2').set('data', 'part2');
model.result('pg8').feature('traj2').create('col1', 'Color');
model.result('pg8').feature('traj2').feature('col1').set('expr', 'fpt.vr');
model.result('pg8').feature('traj4').set('data', 'part2');
model.result('pg8').feature('traj5').set('data', 'part2');
model.result('pg8').feature('traj6').set('data', 'part2');
model.result('pg8').feature('traj7').set('data', 'part2');

model.study('std1').feature('param').set('sweeptype', 'filled');
model.study('std1').feature('param').set('pname', {'dp' 'd'});
model.study('std1').feature('param').set('plistarr', {'30 75 290 675 755 900' '4 8'});
model.study('std1').feature('param').set('punit', {'nm' 'um'});
model.study('std1').feature('time').set('tlist', 'range(0,0.0005,0.01) range(0.01,0.03,6)');

model.sol('sol1').attach('std1');
model.sol('sol1').feature('st1').label('Compile Equations: Stationary');
model.sol('sol1').feature('v1').label('Dependent Variables 1.1');
model.sol('sol1').feature('v1').set('clist', {'0.00598[s]'});
model.sol('sol1').feature('s1').label('Stationary Solver 1.1');
model.sol('sol1').feature('s1').set('probesel', 'none');
model.sol('sol1').feature('s1').feature('dDef').label('Direct 2');
model.sol('sol1').feature('s1').feature('aDef').label('Advanced 1');
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('s1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature('fc1').set('initstep', 0.01);
model.sol('sol1').feature('s1').feature('fc1').set('maxiter', 100);
model.sol('sol1').feature('s1').feature('d1').label('Direct, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('i1').label('AMG, fluid flow variables (spf)');
model.sol('sol1').feature('s1').feature('i1').set('nlinnormuse', true);
model.sol('sol1').feature('s1').feature('i1').set('maxlinit', 1000);
model.sol('sol1').feature('s1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('s1').feature('i1').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('maxcoarsedof', 80000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').label('SCGS 1.1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('iter', 0);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavarsactive', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('pr').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').label('SCGS 1.1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('linesweeptype', 'ssor');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('iter', 1);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavarsactive', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('vankavars', {'comp1_spf_inl1_Pinlfdf'});
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('approxscgs', true);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('po').feature('sc1').set('scgsdirectmaxsize', 1000);
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('su1').label('Solution Store 1.1');
model.sol('sol1').feature('st2').label('Compile Equations: Time Dependent');
model.sol('sol1').feature('st2').set('studystep', 'time');
model.sol('sol1').feature('v2').label('Dependent Variables 2.1');
model.sol('sol1').feature('v2').set('initmethod', 'sol');
model.sol('sol1').feature('v2').set('initsol', 'sol1');
model.sol('sol1').feature('v2').set('initsoluse', 'sol2');
model.sol('sol1').feature('v2').set('solnum', 'auto');
model.sol('sol1').feature('v2').set('resscalemethod', 'manual');
model.sol('sol1').feature('v2').set('notsolmethod', 'sol');
model.sol('sol1').feature('v2').set('notsol', 'sol1');
model.sol('sol1').feature('v2').set('notsoluse', 'sol2');
model.sol('sol1').feature('v2').set('notsolnum', 'auto');
model.sol('sol1').feature('v2').set('clist', {'range(0,0.0005,0.01) range(0.01,0.03,6)' '0.00598[s]'});
model.sol('sol1').feature('t1').label('Time-Dependent Solver 1.1');
model.sol('sol1').feature('t1').set('control', 'time');
model.sol('sol1').feature('t1').set('tlist', 'range(0,0.0005,0.01) range(0.01,0.03,6)');
model.sol('sol1').feature('t1').set('rtol', 1.0E-5);
model.sol('sol1').feature('t1').set('timemethod', 'genalpha');
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').set('tstepsgenalpha', 'strict');
model.sol('sol1').feature('t1').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('aDef').label('Advanced 1');
model.sol('sol1').feature('t1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 0.1);
model.sol('sol1').feature('t1').feature('i1').label('Iterative 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('t1').feature('i1').feature('ja1').label('Jacobi 1.1');
model.sol('sol1').runAll;

model.batch('p1').set('control', 'param');
model.batch('p1').set('sweeptype', 'filled');
model.batch('p1').set('pname', {'dp' 'd'});
model.batch('p1').set('plistarr', {'30 75 290 675 755 900' '4 8'});
model.batch('p1').set('punit', {'nm' 'um'});
model.batch('p1').set('err', true);
model.batch('p1').feature('so1').set('seq', 'sol1');
model.batch('p1').feature('so1').set('psol', 'sol3');
model.batch('p1').feature('so1').set('param', {'"dp","3E-8","d","4E-6"' '"dp","3E-8","d","8E-6"' '"dp","7.5E-8","d","4E-6"' '"dp","7.5E-8","d","8E-6"' '"dp","2.9E-7","d","4E-6"' '"dp","2.9E-7","d","8E-6"' '"dp","6.75E-7","d","4E-6"' '"dp","6.75E-7","d","8E-6"' '"dp","7.55E-7","d","4E-6"' '"dp","7.55E-7","d","8E-6"'  ...
'"dp","9E-7","d","4E-6"' '"dp","9E-7","d","8E-6"'});
model.batch('p1').attach('std1');
model.batch('p1').run;

model.result.dataset('rev1').label('Revolution 2D');
model.result.dataset('rev1').set('startangle', -90);
model.result.dataset('rev1').set('revangle', 225);
model.result.dataset('rev2').label('Revolution 2D 1');
model.result.dataset('rev2').set('startangle', -90);
model.result.dataset('rev2').set('revangle', 225);
model.result('pg1').label('Velocity (spf)');
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('resolution', 'normal');
model.result('pg2').label('Pressure (spf)');
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').feature('con1').label('Contour');
model.result('pg2').feature('con1').set('number', 40);
model.result('pg2').feature('con1').set('levelrounding', false);
model.result('pg2').feature('con1').set('smooth', 'internal');
model.result('pg2').feature('con1').set('resolution', 'normal');
model.result('pg3').label('Velocity, 3D (spf)');
model.result('pg3').set('frametype', 'spatial');
model.result('pg3').feature('surf1').label('Surface');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('resolution', 'normal');
model.result('pg4').label('Particle Trajectories (fpt)');
model.result('pg4').set('titletype', 'manual');
model.result('pg4').set('title', 'Particle trajectories, color is radial velocity');
model.result('pg4').set('paramindicator', 'Time=0.975 s');
model.result('pg4').set('showlegendsunit', true);
model.result('pg4').feature('traj1').set('pointtype', 'point');
model.result('pg4').feature('traj1').set('sphereradiusscale', 67227.44683418474);
model.result('pg4').feature('traj1').set('sphereradiusscaleactive', false);
model.result('pg4').feature('traj1').feature('col1').set('unit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm/s']);
model.result('pg4').feature('traj1').feature('col1').set('rangecoloractive', true);
model.result('pg4').feature('traj1').feature('col1').set('rangecolormin', -0.5635853564045045);
model.result('pg4').feature('traj1').feature('col1').set('rangecolormax', 1.1);
model.result('pg4').feature('traj1').feature('col1').set('rangedataactive', true);
model.result('pg4').feature('traj1').feature('col1').set('rangedatamin', -0.5635853564045045);
model.result('pg4').feature('traj1').feature('col1').set('rangedatamax', 1.1);
model.result('pg5').label('Velocity (spf) 1');
model.result('pg5').set('looplevel', [1 1 1]);
model.result('pg5').set('symmetryaxis', true);
model.result('pg5').set('frametype', 'spatial');
model.result('pg5').set('showlegendsunit', true);
model.result('pg5').feature('surf1').label('Surface');
model.result('pg5').feature('surf1').set('unit', 'mm/s');
model.result('pg5').feature('surf1').set('smooth', 'internal');
model.result('pg5').feature('surf1').set('resolution', 'normal');
model.result('pg5').feature('arws1').set('arrowlength', 'logarithmic');
model.result('pg5').feature('arws1').set('scale', 41568.6284943747);
model.result('pg5').feature('arws1').set('scaleactive', true);
model.result('pg5').feature('arws1').set('color', 'black');
model.result('pg6').label('Pressure (spf) 1');
model.result('pg6').set('looplevel', [1 1 1]);
model.result('pg6').set('frametype', 'spatial');
model.result('pg6').feature('con1').label('Contour');
model.result('pg6').feature('con1').set('number', 40);
model.result('pg6').feature('con1').set('levelrounding', false);
model.result('pg6').feature('con1').set('smooth', 'internal');
model.result('pg6').feature('con1').set('resolution', 'normal');
model.result('pg7').label('Velocity, 3D (spf) 1');
model.result('pg7').set('data', 'rev2');
model.result('pg7').set('looplevel', [1 1 1]);
model.result('pg7').set('frametype', 'spatial');
model.result('pg7').feature('surf1').label('Surface');
model.result('pg7').feature('surf1').set('smooth', 'internal');
model.result('pg7').feature('surf1').set('resolution', 'normal');
model.result('pg9').label('1D Plot of Particle Distribution, insert A');
model.result('pg9').set('xlabel', 'Time (s)');
model.result('pg9').set('ylabel', 'Normalized distance, average (1)');
model.result('pg9').set('axislimits', true);
model.result('pg9').set('xmin', -0.01);
model.result('pg9').set('xmax', 1.36);
model.result('pg9').set('ymin', 0.249);
model.result('pg9').set('ymax', 0.28);
model.result('pg9').set('legendpos', 'upperleft');
model.result('pg9').set('xlabelactive', false);
model.result('pg9').set('ylabelactive', false);
model.result('pg9').feature('glob1').label('Global 4 um vessel');
model.result('pg9').feature('glob1').set('looplevelinput', {'all' 'manual' 'all'});
model.result('pg9').feature('glob1').set('looplevel', {'1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221' '1' '1, 2, 3, 4, 5, 6'});
model.result('pg9').feature('glob1').set('expr', {'dnave'});
model.result('pg9').feature('glob1').set('unit', {'1'});
model.result('pg9').feature('glob1').set('descr', {'Normalized distance, average'});
model.result('pg9').feature('glob1').set('linecolor', 'black');
model.result('pg9').feature('glob1').set('linewidth', 'preference');
model.result('pg9').feature('glob1').set('linemarker', 'cyclereset');
model.result('pg9').feature('glob1').set('markers', 300);
model.result('pg9').feature('glob1').set('autodescr', false);
model.result('pg9').feature('glob2').label('Global 8 um vessel');
model.result('pg9').feature('glob2').set('looplevelinput', {'all' 'manual' 'all'});
model.result('pg9').feature('glob2').set('looplevel', {'1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221' '2' '1, 2, 3, 4, 5, 6'});
model.result('pg9').feature('glob2').set('expr', {'dnave'});
model.result('pg9').feature('glob2').set('unit', {'1'});
model.result('pg9').feature('glob2').set('descr', {'Normalized distance, average'});
model.result('pg9').feature('glob2').set('linecolor', 'gray');
model.result('pg9').feature('glob2').set('linewidth', 'preference');
model.result('pg9').feature('glob2').set('linemarker', 'cyclereset');
model.result('pg9').feature('glob2').set('markers', 117);
model.result('pg9').feature('glob2').set('autodescr', false);
model.result('pg10').label('Particle Trajectories, insert B');
model.result('pg10').set('looplevel', [65 1 2]);
model.result('pg10').set('titletype', 'manual');
model.result('pg10').set('title', 'Particle trajectories, color is radial velocity');
model.result('pg10').set('paramindicator', 'Time=0.975 s');
model.result('pg10').set('showlegendsunit', true);
model.result('pg10').feature('traj1').set('pointtype', 'point');
model.result('pg10').feature('traj1').set('sphereradiusscale', 31513.303291050364);
model.result('pg10').feature('traj1').set('sphereradiusscaleactive', false);
model.result('pg10').feature('traj1').feature('col1').set('unit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm/s']);
model.result('pg11').label('Particle Trajectories, insert C');
model.result('pg11').set('looplevel', [65 1 6]);
model.result('pg11').set('titletype', 'manual');
model.result('pg11').set('title', 'Particle trajectories, color is radial velocity');
model.result('pg11').set('paramindicator', 'Time=0.975 s');
model.result('pg11').set('showlegendsunit', true);
model.result('pg11').feature('traj1').set('pointtype', 'point');
model.result('pg11').feature('traj1').set('sphereradiusscale', 31826.876221206512);
model.result('pg11').feature('traj1').set('sphereradiusscaleactive', false);
model.result('pg11').feature('traj1').feature('col1').set('unit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm/s']);
model.result('pg11').feature('traj1').feature('col1').set('colortabletrans', 'nonlinear');
model.result('pg11').feature('traj1').feature('col1').set('colorcalibration', 1);
model.result('pg8').label('Particle Trajectories, insert D');
model.result('pg8').set('looplevel', [1 1 1]);
model.result('pg8').set('showlegendsunit', true);
model.result('pg8').feature('traj1').label('Particle Trajectories 75 nm at end time');
model.result('pg8').feature('traj1').set('looplevel', [221 1 2]);
model.result('pg8').feature('traj1').feature('col1').set('unit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm/s']);
model.result('pg8').feature('traj3').label('Particle Trajectories 75 nm end time');
model.result('pg8').feature('traj3').set('looplevel', [221 1 2]);
model.result('pg8').feature('traj3').set('linetype', 'none');
model.result('pg8').feature('traj3').set('pointtype', 'point');
model.result('pg8').feature('traj3').set('pointradiusexpr', '0.030/2');
model.result('pg8').feature('traj3').set('sphereradiusscale', 2000);
model.result('pg8').feature('traj3').set('sphereradiusscaleactive', true);
model.result('pg8').feature('traj3').set('pointcolor', 'blue');
model.result('pg8').feature('traj2').label('Particle Trajectories 900 nm at end time');
model.result('pg8').feature('traj2').set('looplevel', [221 1 6]);
model.result('pg8').feature('traj2').feature('col1').set('unit', [native2unicode(hex2dec({'00' 'b5'}), 'unicode') 'm/s']);
model.result('pg8').feature('traj2').feature('col1').set('colortable', 'GrayScale');
model.result('pg8').feature('traj4').label('Particle Trajectories 900 nm at 0 s');
model.result('pg8').feature('traj4').set('looplevel', [1 1 6]);
model.result('pg8').feature('traj4').set('linetype', 'none');
model.result('pg8').feature('traj4').set('pointtype', 'point');
model.result('pg8').feature('traj4').set('pointradiusexpr', '0.030/2');
model.result('pg8').feature('traj4').set('sphereradiusscale', 4000);
model.result('pg8').feature('traj4').set('sphereradiusscaleactive', true);
model.result('pg8').feature('traj4').set('pointcolor', 'black');
model.result('pg8').feature('traj5').label('Particle Trajectories 900 nm at 0.4 s');
model.result('pg8').feature('traj5').set('looplevel', [35 1 6]);
model.result('pg8').feature('traj5').set('linetype', 'none');
model.result('pg8').feature('traj5').set('pointtype', 'point');
model.result('pg8').feature('traj5').set('pointradiusexpr', '0.030/2');
model.result('pg8').feature('traj5').set('sphereradiusscale', 4000);
model.result('pg8').feature('traj5').set('sphereradiusscaleactive', true);
model.result('pg8').feature('traj5').set('pointcolor', 'black');
model.result('pg8').feature('traj6').label('Particle Trajectories 900 nm at 1 s');
model.result('pg8').feature('traj6').set('looplevel', [55 1 6]);
model.result('pg8').feature('traj6').set('linetype', 'none');
model.result('pg8').feature('traj6').set('pointtype', 'point');
model.result('pg8').feature('traj6').set('pointradiusexpr', '0.030/2');
model.result('pg8').feature('traj6').set('sphereradiusscale', 4000);
model.result('pg8').feature('traj6').set('sphereradiusscaleactive', true);
model.result('pg8').feature('traj6').set('pointcolor', 'black');
model.result('pg8').feature('traj7').label('Particle Trajectories 900 nm at 1.6 s');
model.result('pg8').feature('traj7').set('looplevel', [75 1 6]);
model.result('pg8').feature('traj7').set('linetype', 'none');
model.result('pg8').feature('traj7').set('pointtype', 'point');
model.result('pg8').feature('traj7').set('pointradiusexpr', '0.030/2');
model.result('pg8').feature('traj7').set('sphereradiusscale', 4000);
model.result('pg8').feature('traj7').set('sphereradiusscaleactive', true);
model.result('pg8').feature('traj7').set('pointcolor', 'black');

out = model;
